name: Build and publish Red Hat Linux container images

on:
  push:
  # 워크플로 자동 실행 트리거
    branches:
      - main
    paths:
      - 'RedHat/**'
      - '.github/workflows/build-and-push-redhat-images.yml'
  workflow_dispatch:
    inputs:
      osname:
        description: List of os name to build
        default: 'RedHat'
        required: false
      os:
        description: List of os versions to build
        default: 'redhat8'
        required: false
      lang:
        description: List of languages to build
        default: 'systemd,8.6-systemd'
        required: false
      workflowfile:
        description: workflow file name
        default: 'build-and-push-redhat-images.yml'
        required: true

# Default values for the builds triggered by the push event
env:
  osname: 'RedHat'
  os: 'redhat8'
  lang: 'systemd'
  workflowfile: 'build-and-push-redhat-images.yml'

jobs:
  prepare:
    name: Create build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
      skip_build: ${{ steps.build-matrix.outputs.skip_build }}
      repository_owner: ${{ steps.repository_owner.outputs.repository_owner }}
      date_stamp: ${{ steps.date_stamp.outputs.date_stamp }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          # We need "some" commit history to check for changed files
          fetch-depth: 32

      - name: Build matrix
        id: build-matrix
        working-directory: ${{ env.osname }}
        run: |
          IFS=", " read -r -a os_list <<< "${{ github.event.inputs.os || env.os}}"
          IFS=", " read -r -a lang_list <<< "${{ github.event.inputs.lang || env.lang}}"
          changes=$(mktemp)
          # workflow is only set in the workflow_dispatch event payload
          workflow="${{ github.event.workflow }}"
          if [[ -z ${workflow} ]]; then
            # Push event - retrieve list of changed files
            git diff --name-only '${{ github.event.before }}..${{ github.event.after }}' > "${changes}"
            if grep -q ${{ env.workflowfile }} "${changes}"; then
              echo "PUSH: Action updated, rebuilding all images"
              build_all=1
            else
              echo "PUSH: Rebuilding changed images only"
              build_all=0
            fi
          else
            echo "MANUAL: Rebuilding based on parameters"
            build_all=1
          fi
          matrix=$(
            for os in "${os_list[@]}"; do
              pushd "${os}" >/dev/null || exit 1
              for lang in "${lang_list[@]}"; do
                if [[ -d ${lang} ]]; then
                  pushd "${lang}" >/dev/null || exit 1
                  for dockerfile in */Dockerfile; do
                    tag=$(dirname "${dockerfile}")
                    if [[ -f ${tag}/.skip-arm64 ]]; then
                      multi=0
                      arch="linux/amd64"
                    else
                      multi=1
                      arch="linux/amd64,linux/arm64"
                    fi
                    if [[ ${build_all} -eq 1 ]] || grep -q "${os}/${lang}/${tag}" "${changes}"; then
                      echo "${os};${lang};${tag};${arch};${multi}"
                    fi
                  done
                  popd >/dev/null || exit 1
                fi
              done
              popd >/dev/null || exit 1
            done | jq --slurp --raw-input --compact-output '
              split("\n") |
              .[:-1] |
              map(split(";")) |
              map({"os": .[0], "lang": .[1], "tag": .[2], "arch": .[3], "multi": (.[4] == "1")})'
          )
          rm "${changes}"
          if [[ ${matrix} == "[]" ]]; then
            # Empty array -- change didn't impact any image
            echo "# Empty array -- change didn't impact any image"
            skip_build=true
          else
            skip_build=false
            matrix=$(jq --compact-output '{ "include": .}' <<<"${matrix}")
          fi
          echo "matrix=${matrix}" >> "$GITHUB_OUTPUT"
          echo "skip_build=${skip_build}" >> "$GITHUB_OUTPUT"

      - name: echo matrix
        id: echo_matrix
        run: |
          echo "matrix=${matrix}"
          
      - name: Lowercase repository owner
        id: repository_owner
        run: |
          echo "repository_owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Date stamp
        id: date_stamp
        run: |
          echo "date_stamp=$(date +'%Y%m%d')" >> "$GITHUB_OUTPUT"

  build-image:
    name: Build image
    needs: [ prepare ]
    if: always() && needs.prepare.outputs.skip_build == 'false'
    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.S_GITHUB_USERNAME }}
          password: ${{ secrets.S_GITHUB_TOKEN }}

      - name: Build image - amd64
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.osname }}/${{ matrix.os }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}${{ matrix.multi && '-amd64' || '' }}"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}${{ matrix.multi && '-amd64' || '' }}"
         
      - name: Build image - arm64
        uses: docker/build-push-action@v5
        if: matrix.multi
        with:
          context: ${{ env.osname }}/${{ matrix.os }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}-arm64"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-arm64"
            "${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}${{ matrix.multi && '-amd64' || '' }}"
            "${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}${{ matrix.multi && '-amd64' || '' }}"
   
      - name: Manifest - linux/amd64, linux/arm64
        if: matrix.multi && github.event_name != 'pull_request'
        run: |
          docker buildx imagetools create --tag \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}-amd64" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}-arm64"
          
          docker buildx imagetools create --tag \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-amd64" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-arm64"

      - name: Build image - amd64, arm64 to docker.hub
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.osname }}/${{ matrix.os }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            "${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}"
            "${{ needs.prepare.outputs.repository_owner }}/${{ matrix.os }}-${{ matrix.lang }}:${{ matrix.tag }}"
